<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1a28c484-6b49-42b8-b13b-ff087bbd00c7" name="Changes" comment="这两个路径和差不多，但感觉都没写的很确切的感觉">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;lmYang1984&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:/lmYang1984/LeetCode.git&quot;,
    &quot;accountId&quot;: &quot;3ed6a42b-45df-49b0-af16-11afd909c088&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/main/java/leetcode/lmy/com/二叉树中的最大路径和/Solution.java" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2oYkoPXC3crWBCtKJkjpzXYb1bs" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Solution.executor": "Run",
    "Application.leetcode.lmy.com.二分.二分查找_704.Solution.executor": "Run",
    "Application.leetcode.lmy.com.二叉树中的最大路径和.Solution.executor": "Run",
    "Application.leetcode.lmy.com.二叉树的右视图_199.Solution.executor": "Run",
    "Application.leetcode.lmy.com.回溯.括号生成_22.Solution.executor": "Run",
    "Application.leetcode.lmy.com.数学问题.下一个排列_31.Solution.executor": "Run",
    "Application.leetcode.lmy.com.栈.字符串解码_394.Solution.executor": "Run",
    "Application.leetcode.lmy.com.模拟.比较版本号_165.Solution.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "E:/AAAAPy_Project/tongyi-jetbrains-latest.zip",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "E:/AAAJavaSrc/LeetCode/src/main/java/leetcode/lmy/com/Main.java",
    "settings.editor.selected.configurable": "terminal",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="leetcode.lmy.com.栈.用栈实现队列_232" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="leetcode.lmy.com.回溯.路径总和_112" />
      <recent name="leetcode.lmy.com.回溯.路径总和_113" />
      <recent name="leetcode.lmy.com.二叉树.验证二叉搜索树_98" />
      <recent name="leetcode.lmy.com.二叉树.平衡二叉树_110" />
      <recent name="leetcode.lmy.com.回溯.组合总数_39" />
    </key>
  </component>
  <component name="RunManager" selected="Application.leetcode.lmy.com.栈.字符串解码_394.Solution">
    <configuration name="Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="leetcode.lmy.com.模拟.字符串转换整数_8.Solution" />
      <module name="LeetCode" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="leetcode.lmy.com.模拟.字符串转换整数_8.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="leetcode.lmy.com.模拟.比较版本号_165.Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="leetcode.lmy.com.模拟.比较版本号_165.Solution" />
      <module name="LeetCode" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="leetcode.lmy.com.模拟.比较版本号_165.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="leetcode.lmy.com.回溯.括号生成_22.Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="leetcode.lmy.com.回溯.括号生成_22.Solution" />
      <module name="LeetCode" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="leetcode.lmy.com.回溯.括号生成_22.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="leetcode.lmy.com.数学问题.下一个排列_31.Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="leetcode.lmy.com.数学问题.下一个排列_31.Solution" />
      <module name="LeetCode" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="leetcode.lmy.com.数学问题.下一个排列_31.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="leetcode.lmy.com.栈.字符串解码_394.Solution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="leetcode.lmy.com.栈.字符串解码_394.Solution" />
      <module name="LeetCode" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="leetcode.lmy.com.栈.字符串解码_394.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.leetcode.lmy.com.栈.字符串解码_394.Solution" />
        <item itemvalue="Application.leetcode.lmy.com.模拟.比较版本号_165.Solution" />
        <item itemvalue="Application.Solution" />
        <item itemvalue="Application.leetcode.lmy.com.回溯.括号生成_22.Solution" />
        <item itemvalue="Application.leetcode.lmy.com.数学问题.下一个排列_31.Solution" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23726.103" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23726.103" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1a28c484-6b49-42b8-b13b-ff087bbd00c7" name="Changes" comment="" />
      <created>1731054070693</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1731054070693</updated>
      <workItem from="1731054071646" duration="16377000" />
      <workItem from="1731403487088" duration="4466000" />
      <workItem from="1731465695279" duration="2649000" />
      <workItem from="1731468463128" duration="19284000" />
      <workItem from="1731635649328" duration="48734000" />
    </task>
    <task id="LOCAL-00007" summary="dummy">
      <option name="closed" value="true" />
      <created>1731568468286</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1731568468286</updated>
    </task>
    <task id="LOCAL-00008" summary="dummy">
      <option name="closed" value="true" />
      <created>1731568480793</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1731568480793</updated>
    </task>
    <task id="LOCAL-00009" summary="删除重复元素&#10;dummy&#10;找到重复模式串，nxt指向末尾全部del">
      <option name="closed" value="true" />
      <created>1731586060279</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1731586060279</updated>
    </task>
    <task id="LOCAL-00010" summary="企图在a数组找到合适的i使得整个数组被均匀的分成两部分">
      <option name="closed" value="true" />
      <created>1731591916681</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1731591916681</updated>
    </task>
    <task id="LOCAL-00011" summary="统一文件名">
      <option name="closed" value="true" />
      <created>1731593110463</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1731593110463</updated>
    </task>
    <task id="LOCAL-00012" summary="中序遍历">
      <option name="closed" value="true" />
      <created>1731593964158</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1731593964158</updated>
    </task>
    <task id="LOCAL-00013" summary="层序遍历">
      <option name="closed" value="true" />
      <created>1731636334780</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1731636334781</updated>
    </task>
    <task id="LOCAL-00014" summary="二分查找&#10;最后找出来的idx 是 l&#10;需要判断越界和是否相等">
      <option name="closed" value="true" />
      <created>1731637606887</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1731637606887</updated>
    </task>
    <task id="LOCAL-00015" summary="in栈和out栈模拟队列">
      <option name="closed" value="true" />
      <created>1731638331264</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1731638331264</updated>
    </task>
    <task id="LOCAL-00016" summary="从后往前找到&#10;a[i] &lt; a[j] 降序&#10;在a[j] 降序中找到最小的swap比a[i]&#10;swap&#10;之后升序">
      <option name="closed" value="true" />
      <created>1731641614861</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1731641614861</updated>
    </task>
    <task id="LOCAL-00017" summary="合并&#10;递归终止一个节点&#10;问题划分&#10;合并">
      <option name="closed" value="true" />
      <created>1731658540531</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1731658540531</updated>
    </task>
    <task id="LOCAL-00018" summary="回溯&#10;先确定左括号&#10;右边括号不多于左括号">
      <option name="closed" value="true" />
      <created>1731659663053</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1731659663053</updated>
    </task>
    <task id="LOCAL-00019" summary="数组越界的判断&#10;res &lt; maxv / 10&#10;res == maxv / 10 &amp;&amp; num &gt; 7">
      <option name="closed" value="true" />
      <created>1731899090955</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1731899090955</updated>
    </task>
    <task id="LOCAL-00020" summary="注意判断两种合法int的越界&#10;a + b 和 a * a">
      <option name="closed" value="true" />
      <created>1731899562256</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1731899562256</updated>
    </task>
    <task id="LOCAL-00021" summary="递推爬到i阶的方法数 = 爬到i-1和i-2的数字之和">
      <option name="closed" value="true" />
      <created>1731899909779</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1731899909779</updated>
    </task>
    <task id="LOCAL-00022" summary="模拟数字相加&#10;注意最后加完一位的adder重新生成">
      <option name="closed" value="true" />
      <created>1731900563298</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1731900563298</updated>
    </task>
    <task id="LOCAL-00023" summary="两个指针同时遍历&#10;while(p1 &lt; len || p2 &lt; len)">
      <option name="closed" value="true" />
      <created>1731914631999</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1731914631999</updated>
    </task>
    <task id="LOCAL-00024" summary="单调栈&#10;只有加入的元素大于才需要操作&#10;判断越界&#10;存入res&#10;window中仅保存可能为最值的值">
      <option name="closed" value="true" />
      <created>1731919030374</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1731919030374</updated>
    </task>
    <task id="LOCAL-00025" summary="主要是交换的判定式&#10;nums[i] != nums[nums[i] - 1]">
      <option name="closed" value="true" />
      <created>1731921842915</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1731921842915</updated>
    </task>
    <task id="LOCAL-00026" summary="基础动态规划，考虑某个硬币选择与否的递推">
      <option name="closed" value="true" />
      <created>1731931760576</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1731931760576</updated>
    </task>
    <task id="LOCAL-00027" summary="括号匹配,只能以右括号结尾">
      <option name="closed" value="true" />
      <created>1731933295000</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1731933295000</updated>
    </task>
    <task id="LOCAL-00028" summary="链表倒数k个结点">
      <option name="closed" value="true" />
      <created>1731933496148</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1731933496148</updated>
    </task>
    <task id="LOCAL-00029" summary="递归&#10;root 前序左子树 前序右子树&#10;中序左子树 root 中序右子树&#10;只需要知道左子树大小，顺利将左右子树对应起来即可">
      <option name="closed" value="true" />
      <created>1731984844958</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1731984844959</updated>
    </task>
    <task id="LOCAL-00030" summary="覆盖子串&#10;双指针 + 滑动窗口&#10;值得学习的点是用hashmap去维护窗口和t串之间的匹配情况">
      <option name="closed" value="true" />
      <created>1731999071997</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1731999071997</updated>
    </task>
    <task id="LOCAL-00031" summary="类似的问题dfs去访问遍历树的路径&#10;控制访问顺序&#10;控制保存结点时机">
      <option name="closed" value="true" />
      <created>1732001156526</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1732001156526</updated>
    </task>
    <task id="LOCAL-00032" summary="组合与排列&#10;组合foridx&#10;排列fori + boolean">
      <option name="closed" value="true" />
      <created>1732003168816</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1732003168816</updated>
    </task>
    <task id="LOCAL-00033" summary="精髓在于个位相乘的式子&#10;int p1 = i + j;//十位&#10;int p2 = i + j + 1;//个位&#10;int sum = num + res[p2];&#10;res[p2] = sum % 10;&#10;res[p1] += sum / 10;">
      <option name="closed" value="true" />
      <created>1732004867490</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1732004867490</updated>
    </task>
    <task id="LOCAL-00034" summary="用快慢指针，只存非&quot; &quot;值然后手动翻转，很麻烦">
      <option name="closed" value="true" />
      <created>1732006846690</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1732006846690</updated>
    </task>
    <task id="LOCAL-00035" summary="用一个stack保存单调递减序列">
      <option name="closed" value="true" />
      <created>1732067185614</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1732067185614</updated>
    </task>
    <task id="LOCAL-00036" summary="递归，要知道回溯的时机">
      <option name="closed" value="true" />
      <created>1732068608190</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1732068608190</updated>
    </task>
    <task id="LOCAL-00037" summary="问题拆分成最小子问题，判断两颗子树是否对称">
      <option name="closed" value="true" />
      <created>1732069540240</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1732069540241</updated>
    </task>
    <task id="LOCAL-00038" summary="递归比较简单，迭代要麻烦很多">
      <option name="closed" value="true" />
      <created>1732069827876</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1732069827876</updated>
    </task>
    <task id="LOCAL-00039" summary="这种带一个值传进去表达某一层结点的信息很适合带当前结点深度或者是说乘积之类的东西">
      <option name="closed" value="true" />
      <created>1732070132281</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1732070132282</updated>
    </task>
    <task id="LOCAL-00040" summary="感觉懵懵的也做出来了，一开始让i=0把顺序不同的结果也返回了，加了个idx过了，目的是限制一种顺序，递归下去的时候i不加1说明当前元素还能选">
      <option name="closed" value="true" />
      <created>1732071456265</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1732071456265</updated>
    </task>
    <task id="LOCAL-00041" summary="用高度去判断二叉树是否平衡，用特值传递结果">
      <option name="closed" value="true" />
      <created>1732072364361</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1732072364361</updated>
    </task>
    <task id="LOCAL-00042" summary="注意旋转规律&#10;从i行 交换到 n - 1 - i列&#10;从j列 交换到 j行">
      <option name="closed" value="true" />
      <created>1732088285247</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1732088285247</updated>
    </task>
    <task id="LOCAL-00043" summary="二叉搜索树中序遍历为递增序列！&#10;二叉搜索树中序遍历为递增序列！&#10;二叉搜索树中序遍历为递增序列！">
      <option name="closed" value="true" />
      <created>1732089874937</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1732089874937</updated>
    </task>
    <task id="LOCAL-00044" summary="dp[i][j]表示m[i-1][j-1]为1，且为ending的最大正方形&#10;把矩阵中枚举一遍">
      <option name="closed" value="true" />
      <created>1732093568103</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1732093568103</updated>
    </task>
    <task id="LOCAL-00045" summary="二分必做&#10;if (nums[mid] &lt; target) &#10;    l = mid + 1;&#10;    说明l会落在&gt;=target的第一个数上&#10;else&#10;    r = mid - 1;&#10;    &#10;if (nums[mid] &lt;= target) &#10;    l = mid + 1;&#10;    说明l会落在&lt;target的第一个数上&#10;else&#10;    r = mid - 1;">
      <option name="closed" value="true" />
      <created>1732095081219</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1732095081219</updated>
    </task>
    <task id="LOCAL-00046" summary="数学问题用rand a实现 rand b&#10;a &lt; b&#10;rand(a) - 1 * a + rand(a) * 1&#10;变成进制转换后，覆盖b，然后操作">
      <option name="closed" value="true" />
      <created>1732154196560</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1732154196560</updated>
    </task>
    <task id="LOCAL-00047" summary="先验知识，尝试推导一个判别能否让res落在某个区间&#10;//[2, 3, 1, 5]&#10;//l = 0; r = 2; mid = 1&#10;//r = 0; 发现l == r的时候不是,">
      <option name="closed" value="true" />
      <created>1732156874021</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1732156874021</updated>
    </task>
    <task id="LOCAL-00048" summary="首先是没看清题目迭代decoder&#10;这种一眼就是用栈&#10;比较关键的是入栈和出栈的时机&#10;其恰好是[和]&#10;灵活的重置入栈的num和res">
      <option name="closed" value="true" />
      <created>1732160428905</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1732160428905</updated>
    </task>
    <task id="LOCAL-00049" summary="抓住边角开始划分挺巧妙的思路">
      <option name="closed" value="true" />
      <created>1732176555139</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1732176555139</updated>
    </task>
    <task id="LOCAL-00050" summary="常规dp">
      <option name="closed" value="true" />
      <created>1732177013398</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1732177013399</updated>
    </task>
    <task id="LOCAL-00051" summary="回溯，注意是根到叶子结点，判断当前结点为叶子节点，再判断tar">
      <option name="closed" value="true" />
      <created>1732178032931</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1732178032931</updated>
    </task>
    <task id="LOCAL-00052" summary="就拿第一个字符串别的开始比">
      <option name="closed" value="true" />
      <created>1732178835931</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1732178835931</updated>
    </task>
    <task id="LOCAL-00053" summary="一开始用原地哈希，后面发现他的连续序列其实从0或者从其他数都可以。&#10;这个用哈希表很巧妙的点在于，他一定会从nums - 1也就是这个最长子序列的头开始计数">
      <option name="closed" value="true" />
      <created>1732180297864</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1732180297864</updated>
    </task>
    <task id="LOCAL-00054" summary="一开始用原地哈希，后面发现他的连续序列其实从0或者从其他数都可以。&#10;这个用哈希表很巧妙的点在于，他一定会从nums - 1也就是这个最长子序列的头开始计数">
      <option name="closed" value="true" />
      <created>1732180327437</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1732180327437</updated>
    </task>
    <task id="LOCAL-00055" summary="这两个路径和差不多，但感觉都没写的很确切的感觉">
      <option name="closed" value="true" />
      <created>1732181093758</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1732181093758</updated>
    </task>
    <option name="localTasksCounter" value="56" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="类似的问题dfs去访问遍历树的路径&#10;控制访问顺序&#10;控制保存结点时机" />
    <MESSAGE value="组合与排列&#10;组合foridx&#10;排列fori + boolean" />
    <MESSAGE value="精髓在于个位相乘的式子&#10;int p1 = i + j;//十位&#10;int p2 = i + j + 1;//个位&#10;int sum = num + res[p2];&#10;res[p2] = sum % 10;&#10;res[p1] += sum / 10;" />
    <MESSAGE value="用快慢指针，只存非&quot; &quot;值然后手动翻转，很麻烦" />
    <MESSAGE value="用一个stack保存单调递减序列" />
    <MESSAGE value="递归，要知道回溯的时机" />
    <MESSAGE value="问题拆分成最小子问题，判断两颗子树是否对称" />
    <MESSAGE value="递归比较简单，迭代要麻烦很多" />
    <MESSAGE value="这种带一个值传进去表达某一层结点的信息很适合带当前结点深度或者是说乘积之类的东西" />
    <MESSAGE value="感觉懵懵的也做出来了，一开始让i=0把顺序不同的结果也返回了，加了个idx过了，目的是限制一种顺序，递归下去的时候i不加1说明当前元素还能选" />
    <MESSAGE value="用高度去判断二叉树是否平衡，用特值传递结果" />
    <MESSAGE value="注意旋转规律&#10;从i行 交换到 n - 1 - i列&#10;从j列 交换到 j行" />
    <MESSAGE value="二叉搜索树中序遍历为递增序列！&#10;二叉搜索树中序遍历为递增序列！&#10;二叉搜索树中序遍历为递增序列！" />
    <MESSAGE value="dp[i][j]表示m[i-1][j-1]为1，且为ending的最大正方形&#10;把矩阵中枚举一遍" />
    <MESSAGE value="二分必做&#10;if (nums[mid] &lt; target) &#10;l = mid + 1;&#10;    else&#10;r = mid - 1;" />
    <MESSAGE value="二分必做&#10;if (nums[mid] &lt; target) &#10;    l = mid + 1;&#10;    说明l会落在&gt;=target的第一个数上&#10;else&#10;    r = mid - 1;&#10;    &#10;if (nums[mid] &lt;= target) &#10;    l = mid + 1;&#10;    说明l会落在&lt;target的第一个数上&#10;else&#10;    r = mid - 1;" />
    <MESSAGE value="数学问题用rand a实现 rand b&#10;a &lt; b&#10;rand(a) - 1 * a + rand(a) * 1&#10;变成进制转换后，覆盖b，然后操作" />
    <MESSAGE value="先验知识，尝试推导一个判别能否让res落在某个区间&#10;//[2, 3, 1, 5]&#10;//l = 0; r = 2; mid = 1&#10;//r = 0; 发现l == r的时候不是," />
    <MESSAGE value="首先是没看清题目迭代decoder&#10;这种一眼就是用栈&#10;比较关键的是入栈和出栈的时机&#10;其恰好是[和]&#10;灵活的重置入栈的num和res" />
    <MESSAGE value="抓住边角开始划分挺巧妙的思路" />
    <MESSAGE value="常规dp" />
    <MESSAGE value="回溯，注意是根到叶子结点，判断当前结点为叶子节点，再判断tar" />
    <MESSAGE value="就拿第一个字符串别的开始比" />
    <MESSAGE value="一开始用原地哈希，后面发现他的连续序列其实从0或者从其他数都可以。&#10;这个用哈希表很巧妙的点在于，他一定会从nums - 1也就是这个最长子序列的头开始计数" />
    <MESSAGE value="这两个路径和差不多，但感觉都没写的很确切的感觉" />
    <option name="LAST_COMMIT_MESSAGE" value="这两个路径和差不多，但感觉都没写的很确切的感觉" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>